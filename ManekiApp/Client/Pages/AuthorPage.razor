@page "/author-page"
@page "/author-page/{AuthorPageId:guid}"


@attribute [Authorize]

<PageTitle>AuthorPage</PageTitle>
<RadzenRow>
    <RadzenCard class="w-100">

        @if (author != null && author.User != null)
        {
            <RadzenStack Orientation="Orientation.Horizontal">

                <RadzenImage class="profile-image" Path="@(
                                                         author.ProfileImage != null ?
                                                             $"data:image/jpeg;base64,{author.ProfileImage}" :
                                                             $"https://ui-avatars.com/api/?name={author.Title}"
                                                         )" Style="width: 250px; border-radius: 50%; height: 250px; margin-left: 30px; margin-right: 30px"></RadzenImage>            
                <RadzenStack class="w-100" JustifyContent="Radzen.JustifyContent.SpaceEvenly">
            
                    <RadzenRow Orientation="Orientation.Vertical" Gap="">
                        <RadzenStack Gap=5 >
                        
                            <RadzenText TextStyle="TextStyle.Body1" Style="font-size: 30px; color: #000000"><b>@author.User.UserName</b></RadzenText>
                        

                            <RadzenText Style="font-weight: 400; color: #000000" >@author.Title</RadzenText>
                        </RadzenStack>
                    </RadzenRow>


                    <RadzenRow>
                        <RadzenColumn>
                            <RadzenText Style="font-weight: 500; color: #000000" >@($"{author.Posts.Count} publications")</RadzenText>
                        </RadzenColumn>

                        <RadzenColumn>
                            <RadzenText Style="font-weight: 500; color: #000000" >@($"{author.Subscriptions.Count} subscribers")</RadzenText>
                        </RadzenColumn>
                    </RadzenRow>

                    <RadzenRow>
                        <RadzenButton Text="Subscribe for free" Style="background-color: #58a45b; border-radius: 10px; border: 1px solid #3e633f"></RadzenButton>
                        <RadzenButton Text="Edit page" Variant="Variant.Flat" Click="NavigateToEditPage" Shade="Shade.Light" Style="background-color: #d1d8e1; width: 144px; border-radius: 10px; border: 1px solid #949aa4; color: #000000" />

                    </RadzenRow>

                </RadzenStack>
            </RadzenStack>
        }
    </RadzenCard>
</RadzenRow>

<RadzenRow>
    <RadzenTabs @bind-SelectedIndex=@selectedIndex class="w-100" >
        <Tabs>
            <RadzenTabsItem Text="Main page">

                <RadzenRow class="rz-justify-content-center" >
                    <RadzenText TextStyle="TextStyle.Body1" Style="font-size: 24px"><b>Select your subscription tier</b></RadzenText>
                </RadzenRow>

                <RadzenStack class="w-100" JustifyContent="Radzen.JustifyContent.SpaceEvenly">
                
                    <RadzenRow Gap="1rem">
                        
                        @foreach (var sub in subscriptions)
                        {
                            <RadzenColumn class="rz-pt-5">
                                <SubscriptionCard TierName=@($"{sub.Title}")  Price=@($"{sub.Price}$")
                                                  SubscriptionId="sub.Id" UserId="@Security.User.Id"
                                                  Description="@sub.Description">
                                </SubscriptionCard>
                            </RadzenColumn>
                        }

                        <RadzenStack class="w-100">
                            <hr>
                            <RadzenRow class="rz-justify-content-center">
                                <RadzenText TextStyle="TextStyle.Body1" Style="font-size: 24px"><b>Latest posts from username</b></RadzenText>


                            </RadzenRow>

                            <RadzenRow class="rz-justify-content-center">
                                <RadzenStack Gap=5>
                                    <RadzenLabel Text="Subscription tier" Component="DropDownMultipleChips" Style="margin-right: 8px; vertical-align: middle; font-weight: bold"/>
                                    <RadzenDropDown TValue="string" Data="@tiers" Placeholder="Select a tier" Multiple="true"/>
                                </RadzenStack>

                                <RadzenStack Gap=5>
                                    <RadzenLabel Text="Date" Component="DropDownMultipleChips" Style="margin-right: 8px; vertical-align: middle; font-weight: bold"/>
                                    <RadzenDropDown TValue="int" Data="@years" Placeholder="Select publication date" Multiple="true"/>
                                </RadzenStack>

                                <RadzenStack Gap=5>
                                    <RadzenLabel Text="Sort by" Component="DropDownMultipleChips" Style="margin-right: 8px; vertical-align: middle; font-weight: bold"/>
                                    <RadzenDropDown TValue="string" Data="@sortBy" Placeholder="Sort by" Multiple="true"/>
                                </RadzenStack>


                            </RadzenRow>

                            <RadzenRow>
                                <RadzenStack class="w-100" Orientation="Orientation.Horizontal" JustifyContent="Radzen.JustifyContent.Center" AlignItems="Radzen.AlignItems.Center">
                                    <RadzenTextBox class="w-75" Placeholder="Search for posts" aria-label="TextBox with placeholder" Style="max-width: 300px; margin-right: 10px;"/>
                                    <RadzenButton class="w-25" Style="border-radius: 10px">Search</RadzenButton>

                                </RadzenStack>
                            </RadzenRow>

                            <RadzenRow>
                                <RadzenStack class="w-100" Orientation="Orientation.Horizontal" JustifyContent="Radzen.JustifyContent.Center" AlignItems="Radzen.AlignItems.Center">
                                    <RadzenButton class="w-50" Text="Ð¡lean the filters" Icon="clear" Style="background-color: #d1d8e1; border: 1px solid #949aa4; border-radius: 10px; color: #000000; font-weight: 600"></RadzenButton>

                                </RadzenStack>
                            </RadzenRow>

                        </RadzenStack>

                        <RadzenColumn Size="12">
                            @if (author.Posts.Any())
                            {
                                @foreach (var post in author.Posts)
                                {
                                    <RadzenStack class="w-100">
                                        <RadzenCard Style="position: relative; margin-top: 25px">
                                            <RadzenBadge Text="Blocked" Style="font-size: 16px; padding: 6px; position: absolute; right: 8px; top: 8px; background-color: #000000" BadgeStyle="BadgeStyle.Secondary"></RadzenBadge>
                                            <RadzenText Text="@post.Title" TextStyle="TextStyle.H4" TagName="TagName.H1"/>
                                            
                                            <hr style="border: none; background-color: rgba(0,0,0,.2); height: 1px; margin: 1rem 0;"/>
                                            
                                            <RadzenHtml>
                                                @((MarkupString)post.Content)
                                            </RadzenHtml>
                                            
                                            <hr style="border: none; background-color: rgba(0,0,0,.2); height: 1px; margin: 1rem 0;"/>
                                            
                                            @if (post.Images != null && post.Images.Any())
                                            {
                                                <RadzenRow>
                                                    <RadzenStack Orientation="Orientation.Horizontal" Class="image-grid" Wrap="FlexWrap.Wrap" Gap="0">
                                                        @foreach (var image in post.Images)
                                                        {
                                                            <RadzenImage Class="post-image" Path="@($"data:image/jpeg;base64,{image.Data}")" />
                                                        }
                                                    </RadzenStack>
                                                </RadzenRow>
                                            }
                                            
                                            <hr style="border: none; background-color: rgba(0,0,0,.2); height: 1px; margin: 1rem 0;"/>
                                            
                                            <RadzenText Text="@post.CreatedAt.ToString("'Posted at' HH:mm MMMM dd")" TextStyle="TextStyle.Overline" TagName="TagName.Pre" Style="margin-bottom:0px"/>
                                            @if (post.CreatedAt != post.EditedAt)
                                            {
                                                <RadzenText Text="@post.EditedAt.ToString("'Edited at' HH:mm MMMM dd")" TextStyle="TextStyle.Overline" TagName="TagName.Pre" Style="margin-bottom: 0px; margin-top: 10px;"/>
                                            }

                                            <RadzenRow>
                                                <RadzenStack class="w-100" Orientation="Orientation.Horizontal" JustifyContent="Radzen.JustifyContent.Center" AlignItems="Radzen.AlignItems.Center" Style="margin-top: 20px">
                                                    <RadzenButton class="w-50" Text="Edit post" Variant="Variant.Flat" Shade="Shade.Light" Style="background-color: #d1d8e1; width: 144px; border-radius: 10px; border: 1px solid #949aa4; color: #000000"/>
                                                    <RadzenButton class="w-50" Text="Get subscription access" Style="background-color: #58a45b; border: 1px solid #456c47; border-radius: 10px; color: #ffffff; font-weight: 600" Icon="lock_open"/>
                                                </RadzenStack>
                                            </RadzenRow>

                                        </RadzenCard>
                                    </RadzenStack>
                                }
                            }
                            else
                            {
                                <RadzenText Text="No posts available." TextStyle="TextStyle.H4" TagName="TagName.H1" />
                            }
                        </RadzenColumn>
                    </RadzenRow>
                </RadzenStack>

            </RadzenTabsItem>

            <RadzenTabsItem Text="About the author">

            <RadzenCard class="w-100" Style="margin-bottom: 20px">

                <RadzenStack Orientation="Orientation.Horizontal">

                    <RadzenStack class="w-100" JustifyContent="Radzen.JustifyContent.SpaceEvenly">
                        <RadzenRow>
                            @foreach (var link in GetSocialLinks())
                            {
                            <RadzenColumn class="text-center">
                                <RadzenImage Path="@link" Style="width: 50px"></RadzenImage>
                            </RadzenColumn>
                            }
                        </RadzenRow>
                    </RadzenStack>
                </RadzenStack>
            </RadzenCard>

                <RadzenCard class="w-100" Style="margin-bottom: 20px" >

                    <RadzenStack Orientation="Orientation.Horizontal">
                                            
                        <RadzenStack class="w-100" JustifyContent="Radzen.JustifyContent.SpaceEvenly">
                        
                            <RadzenRow Orientation="Orientation.Vertical">
                                <RadzenStack Gap=5 >
                                <RadzenText Text="@author.Description" Style="font-size: 14px" />
                                </RadzenStack>
                            </RadzenRow>

                        </RadzenStack>
                    </RadzenStack>
                </RadzenCard>

                <RadzenCard class="w-100">

                    <RadzenStack Orientation="Orientation.Horizontal">
                                            
                        <RadzenStack class="w-100" JustifyContent="Radzen.JustifyContent.SpaceEvenly">
                            <RadzenRow>
                                <RadzenColumn class="text-center" >
                                    <RadzenText TextStyle="TextStyle.Overline" Text="Total posts" Style="font-size: 12px" />
                                    <RadzenText Style="font-weight: 500" >@author.Posts.Count</RadzenText>
                                </RadzenColumn>

                                <RadzenColumn class="text-center" >
                                    <RadzenText TextStyle="TextStyle.Overline" Text="Total Subscribers" Style="font-size: 12px" />
                                    <RadzenText Style="font-weight: 500" >@author.Subscriptions.Count</RadzenText>
                                </RadzenColumn>

                                <RadzenColumn class="text-center">
                                    <RadzenText TextStyle="TextStyle.Overline" Text="Paid subscribers" Style="font-size: 12px" />
                                    <RadzenText Style="font-weight: 500" >@author.Subscriptions.Count(s => s.PermissionLevel > 0)</RadzenText>
                                </RadzenColumn>
                            </RadzenRow>
                            
                        </RadzenStack>
                    </RadzenStack>
                </RadzenCard>
            </RadzenTabsItem>
        </Tabs>
    </RadzenTabs>
</RadzenRow>



@code 
{
    int selectedIndex = 0;

    private List<string> tiers = new List<string> { "Bronze Tier", "Silver Tier", "Gold Tier" };

    private List<int> years = new List<int> { 2022, 2023, 2024 };

    private List<string> sortBy = new List<string> { "From the newest", "From the oldest" };
}
